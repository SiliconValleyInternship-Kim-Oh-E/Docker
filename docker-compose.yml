version: "3.7"

services:
  client:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    tty: true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - frontend
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - inputvideo:/app/input_video
      - outputvideo:/app/output_video
    links:
      - db
    networks:
      - frontend
      - backend
  worker:
    build:
      context: ./celery-queue
      dockerfile: Dockerfile
    depends_on:
      - redis
    command: celery -A tasks worker --loglevel=info
    #command: celery -A tasks worker --loglevel=info -c 4 -P gevent -O fair
    volumes:
      - ./celery-queue:/queue
      - inputvideo:/queue/input_video
      - outputvideo:/queue/output_video
    networks:
      - backend
  # monitor:
  #   build:
  #     context: ./celery-queue
  #     dockerfile: Dockerfile
  #   ports:
  #     - "5555:5555"
  #   restart: always
  #   # command: celery -A tasks worker --loglevel=info
  #   command: celery -A tasks --broker=redis://redis:6379/0 flower
  #   depends_on:
  #     - redis
  #     - worker
  #   volumes: ["./celery-queue:/queue"]
  #   networks:
  #     - backend
  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - backend
  db:
    container_name: mysql
    image: mysql/mysql-server:latest
    command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      # MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_ROOT_PASSWORD: password
      # MYSQL_DATABASE: test
      MYSQL_USER: tester
    ports:
      - "32000:3306"
    volumes:
      # init.sql로 db 초기화(ro는 읽기전용)
      - ./db/mysql-init-file:/docker-entrypoint-initdb.d/:ro
      - ./db/data:/var/lib/mysql
    networks:
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
volumes:
  inputvideo:
  outputvideo:
    # driver: ./backend/input_video:/queue/input_video
#     driver: local
#   appdata:
#     driver: local
